#!/bin/bash

function banner() {
cat << "EOF"
  ______ _                        _ _    _____             __ _       
 |  ____(_)                      | | |  / ____|           / _(_)      
 | |__   _ _ __ _____      ____ _| | | | |     ___  _ __ | |_ _  __ _ 
 |  __| | | '__/ _ \ \ /\ / / _` | | | | |    / _ \| '_ \|  _| |/ _` |
 | |    | | | |  __/\ V  V / (_| | | | | |___| (_) | | | | | | | (_| |
 |_|    |_|_|  \___| \_/\_/ \__,_|_|_|  \_____\___/|_| |_|_| |_|\__, |
                                                                 __/ |
                                                                |___/ 
         ___  __             ___   _                        _  ____   
        / _ \/_ |           / / | | |                      | |/ _\ \  
 __   _| | | || |  ______  | || |_| |__   _____      _____ | | |_ | | 
 \ \ / / | | || | |______| | || __| '_ \ / _ \ \ /\ / / _ \| |  _|| | 
  \ V /| |_| || |          | || |_| | | |  __/\ V  V / (_) | | |  | | 
   \_/  \___(_)_|          | | \__|_| |_|\___| \_/\_/ \___/|_|_|  | | 
                            \_\                                  /_/  
EOF
}

function checkDebian() {
	grep "[9].*" /etc/debian_version > /dev/null 2>&1
	if [ $? -ne 0 ]
	then
		printf "\n\n[!!!] This script is only otpimizet for running un Debian 9.*\n\n"
	fi
}

function checkAdmin() {
	if [ "$EUID" -ne 0 ]
	then
		echo "[!] Need to be root"
		exit 1
	fi
}

function updateAll() {
	printf "[*] Updating system...\n"
	(apt-get update && apt-get upgrade) > /dev/null 2>&1
	if [ $? -eq 0 ]
	then
		printf "[+] Updated successfully!\n\n"
	else
		printf "[!] Error updating\n\n"
		exit 2
	fi
}

function installDepend() {
	printf "[*] Installing dependencies...\n"
	(apt-get install -y curl open-vm-tools wget nmap htop) > /dev/null 2>&1
	if [ $? -eq 0 ]
	then
		printf "[+] Dependencies installed successfully!\n\n"
	else
		printf "[!] Error installing deps\n\n"
		exit 3
	fi
}



function configRc() {
	printf "[*] Enabling rc.local...\n"
	(touch /etc/rc.local && \
	chmod +x /etc/rc.local && \
	systemctl enable rc-local) > /dev/null 2>&1
	if [ $? -eq 0 ]
	then
		printf "[+] Rc.local enabled successfully!\n\n"
	else
		printf "[!] Error enabling rc.local\n\n"
		exit 5
	fi

	printf "[*] Configuring rc.local...\n\n"


	read -p 'Specify the internal interface: ' internalInterface
	read -p 'Specify the external interface: ' externalInterface
	read -p 'Specify the IP of the windows malware lab: ' ipWindows


	echo '' > /etc/rc.local
	echo '#!/bin/bash' > /etc/rc.local
	printf "\n[ok] Blocking ICMP packets...\n"
	sleep 1
	echo "iptables -A INPUT -p icmp -j DROP" >> /etc/rc.local
	printf "[ok] Enabling masquerade...\n"
	sleep 1
	echo "iptables -t nat -A POSTROUTING -j MASQUERADE" >> /etc/rc.local
	printf "[ok] Forwading port 3333 to ${ipWindows}:3389...\n"
	sleep 1
	echo "iptables -A PREROUTING -t nat -i ${externalInterface} -p tcp --dport 3333 -j DNAT --to ${ipWindows}:3389" >> /etc/rc.local
	printf "[ok] Blocking TCP packets from internal network...\n"
	sleep 1
	echo "iptables -A INPUT -s 10.10.10.0/24 -p tcp -j DROP" >> /etc/rc.local
	printf "[ok] Blocking UDP packets from internal network...\n"
	sleep 1
	echo "iptables -A INPUT -s 10.10.10.0/24 -p udp -j DROP" >> /etc/rc.local
	printf "[ok] Blocking ALL the internal network connections...\n\n"
	sleep 1
	echo "iptables -A INPUT -i ${internalInterface} -j DROP" >> /etc/rc.local
	echo 'exit 0' >> /etc/rc.local

	if [ $? -eq 0 ]
	then
		printf "[+] Rc.local configured successfully!\n\n"
	else
		printf "[!] Error configuring rc.local\n\n"
		exit 6
	fi
}

function main() {
	banner
	checkAdmin
	checkDebian
	updateAll
	installDepend
	configRc
	printf "[!!] We need to restart the system!\n"
	read -p '[x] Do you want to reboot now? (yes|no): ' option
	if [ "$option" = "yes" ] || [ "$option" = "y" ]
	then
		shutdown -r now
	fi
	exit 0
}
main
